---
- name: "Installation de alfresco-adf"
  hosts: all
  become: yes

  vars:
    # Configuration installation ADF
    adf_project_name: alfresco-adf
    adf_install_path: /var/www/html
    adf_port: 4201
    # Parametrage ADF
    adf_providers: ECM # ECM, BPM, ALL
    ecm_host: http://192.168.1.18:8080 # Configuration ACS
    bpm_host: http://192.168.1.18:8081 # Configuration APS
    adf_identity_host: "{protocol}//{hostname}{:port}/auth/realms/alfresco"
    adf_auth_type: BASIC # BASIC, OAUTH
    adf_oauth: # Utilisé si adf_auth_type: OAUTH
      host: "{protocol}//{hostname}{:port}/auth/realms/alfresco"
      client_id: alfresco
      scope: openid
      secret: ~
      implicit_flow: "true" # true, false
      silent_login: "true" # true, false
      redirect_silent_iframe_uri: "{protocol}//{hostname}{:port}/assets/silent-refresh.html"
      redirect_uri: /
      redirect_uri_logout: /logout

  tasks:
    - name: "Ajout de l'utilisateur www-data si non existant"
      user:
        name: www-data
        system: yes
        create_home: yes
        shell: /usr/sbin/nologin
        home: /var/www
        skeleton: "false" # Permet de ne pas créer de fichier .bashrc pour l'utilisateur
        state: present

    - name: "Changement des permissions de /var/www pour www-data"
      ansible.builtin.file:
        path: /var/www
        owner: www-data
        group: www-data
        mode: 0755

    - name: "Création du dossier d'installation"
      ansible.builtin.file:
        path: "{{ adf_install_path }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: 0755

    - name: "Enable EPEL Repository on CentOS 7" # Permet d'installer les repos entreprise pour avoir nginx
      ansible.builtin.package:
        name: epel-release
        state: present
      when: ansible_facts['os_family'] == 'RedHat' and ansible_facts ['distribution_major_version'] == '7'

    - name: "Installation de nginx"
      ansible.builtin.package:
        name: nginx
        state: present

    - name: "Copie du fichier de conf nginx global"
      template:
        src: ./templates/nginx.conf.j2
        dest: /etc/nginx/nginx.conf
        backup: yes

    - name: "Copie du fichier de conf nginx du projet"
      template:
        src: ./templates/alfresco-adf-nginx.conf.j2
        dest: /etc/nginx/conf.d/alfresco-adf.conf

    - name: "Netoyage des anciennes versions du projet"
      ansible.builtin.file:
        path: "{{ adf_install_path }}/{{ adf_project_name }}"
        state: absent

    - name: "Copie des sources zipées du projet sur le serveur"
      copy:
        src: "./packages/{{ adf_project_name }}.tar"
        dest: "/tmp/{{ adf_project_name }}.tar"

    - name: "Décompression des sources du projet dans le répertoire d'installation"
      ansible.builtin.unarchive:
        src: "/tmp/{{ adf_project_name }}.tar"
        dest: "{{ adf_install_path }}"
        remote_src: yes

    - name: "Copie de la configuration dans app.config.json"
      template:
        src: ./templates/app.config.json.j2
        dest: "{{ adf_install_path }}/{{ adf_project_name }}/app.config.json"

    - name: "Changement des permissions sur les sources du projet"
      ansible.builtin.file:
        path: "{{ adf_install_path }}/{{ adf_project_name }}"
        state: directory
        recurse: yes
        owner: www-data
        group: www-data
        mode: 0755

    - name: "Redémarage de nginx"
      ansible.builtin.service:
        name: nginx
        state: restarted
        enabled: yes
